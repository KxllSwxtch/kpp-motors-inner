import { useState, useEffect } from 'react'
import axios from 'axios'

const KazakhstanCalculator = ({ usdKztRate, usdKrwRate, carPriceKRW }) => {
	const [carList, setCarList] = useState([])
	const [loading, setLoading] = useState(true)

	const [data, setData] = useState([]) // –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API
	const [brands, setBrands] = useState([]) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–∞—Ä–∫–∏
	const [models, setModels] = useState([]) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–∞—Ä–∫–∏
	const [years, setYears] = useState([]) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≥–æ–¥–∞
	const [volumes, setVolumes] = useState([]) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–±—ä—ë–º—ã –¥–≤–∏–≥–∞—Ç–µ–ª—è

	const [selectedBrand, setSelectedBrand] = useState('') // –í—ã–±—Ä–∞–Ω–Ω–∞—è –º–∞—Ä–∫–∞
	const [selectedModel, setSelectedModel] = useState('') // –í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
	const [selectedYear, setSelectedYear] = useState('') // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥
	const [selectedVolume, setSelectedVolume] = useState('') // –í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è
	const [price, setPrice] = useState(null) // –¶–µ–Ω–∞ –∏–∑ –∏–Ω–≤–æ–π—Å–∞

	const [exchangeRate, setExchangeRate] = useState(usdKztRate) // 1 USD ‚Üí KZT
	const [calculation, setCalculation] = useState(null)

	useEffect(() => {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		const cachedData = localStorage.getItem('kazakhstanCars')

		if (cachedData) {
			// –ï—Å–ª–∏ –µ—Å—Ç—å, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
			const parsedData = JSON.parse(cachedData)
			setData(parsedData)

			// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–∞—Ä–æ–∫
			const uniqueBrands = [...new Set(parsedData.map((item) => item.brand))]
			setBrands(uniqueBrands)
			setLoading(false)
		} else {
			// –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
			axios
				.get(
					`https://corsproxy.io/${encodeURIComponent(
						'https://calculator.ida.kz/data.php',
					)}`,
				)
				.then((response) => {
					setData(response.data)
					localStorage.setItem('kazakhstanCars', JSON.stringify(response.data)) // –ö—ç—à–∏—Ä—É–µ–º

					// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–∞—Ä–æ–∫
					const uniqueBrands = [
						...new Set(response.data.map((item) => item.brand)),
					]
					setBrands(uniqueBrands)
					setLoading(false)
				})
				.catch((error) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error))
		}
	}, [])

	// –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–∞—Ä–∫–∏
	useEffect(() => {
		if (selectedBrand) {
			const filteredModels = [
				...new Set(
					data
						.filter((item) => item.brand === selectedBrand)
						.map((item) => item.model),
				),
			]
			setModels(filteredModels)
			setSelectedModel('') // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
			setSelectedYear('')
			setYears([])
			setSelectedVolume('')
			setVolumes([])
			setPrice(null)
			setCalculation(null)
		}
	}, [selectedBrand, data])

	// –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ–¥–æ–≤ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–¥–µ–ª–∏
	useEffect(() => {
		if (selectedModel) {
			const filteredYears = [
				...new Set(
					data
						.filter(
							(item) =>
								item.brand === selectedBrand && item.model === selectedModel,
						)
						.map((item) => item.year),
				),
			].sort((a, b) => b - a) // –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç –Ω–æ–≤–æ–≥–æ –∫ —Å—Ç–∞—Ä–æ–º—É
			setYears(filteredYears)
			setSelectedYear('')
			setSelectedVolume('')
			setVolumes([])
			setPrice(null)
			setCalculation(null)
		}
	}, [selectedBrand, selectedModel, data])

	// –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä—ë–º–æ–≤ –¥–≤–∏–≥–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≥–æ–¥–∞
	useEffect(() => {
		if (selectedYear) {
			const filteredVolumes = [
				...new Set(
					data
						.filter(
							(item) =>
								item.brand === selectedBrand &&
								item.model === selectedModel &&
								item.year === selectedYear,
						)
						.map((item) => item.volume),
				),
			].sort((a, b) => a - b) // –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É
			setVolumes(filteredVolumes)
			setSelectedVolume('')
			setPrice(null)
			setCalculation(null)
		}
	}, [selectedBrand, selectedModel, selectedYear, data])

	useEffect(() => {
		if (selectedVolume) {
			const selectedCar = data.find(
				(item) =>
					item.brand === selectedBrand &&
					item.model === selectedModel &&
					item.year === selectedYear &&
					item.volume === selectedVolume,
			)
			setPrice(selectedCar ? selectedCar.price : null)
		}
	}, [selectedVolume, data, selectedBrand, selectedModel, selectedYear])

	const formatNumber = (num) => Math.round(num).toLocaleString('ru-RU')

	const calculateCosts = () => {
		if (!price || !selectedVolume || !selectedYear) return

		const koreaContainerUSD = 1900
		const koreaContainerKZT = koreaContainerUSD * usdKztRate

		const koreaTransferUSD = 440000 / usdKrwRate
		const koreaTransferKZT = koreaTransferUSD * usdKztRate

		const koreaDocumentationUSD = 150000 / usdKrwRate
		const koreaDocumentationKZT = koreaDocumentationUSD * usdKztRate

		const priceKZT = price * usdKztRate

		const customs = priceKZT * 0.15
		const excise = selectedVolume >= 3000 ? selectedVolume * 100 : 0
		const vat = (priceKZT + 20000 + excise) * 0.12

		let utilFee = 0
		if (selectedVolume >= 1001 && selectedVolume <= 2000) {
			utilFee = 603750
		} else if (selectedVolume >= 2001 && selectedVolume <= 3000) {
			utilFee = 862500
		} else {
			utilFee = 1983750
		}

		const currentYear = new Date().getFullYear()
		const regFee =
			currentYear - selectedYear > 3
				? 1725000
				: currentYear - selectedYear < 2
				? 863
				: 172500

		const totalKoreaKZT =
			koreaContainerKZT + koreaTransferKZT + koreaDocumentationKZT

		const totalCustoms = customs + vat + excise
		const totalExpenses = totalCustoms + utilFee + regFee

		const carPriceUSD = carPriceKRW / usdKrwRate
		const carPriceKZT = carPriceUSD * usdKztRate

		const finalCostKZT = carPriceKZT + totalExpenses + totalKoreaKZT
		const finalCostUSD = finalCostKZT / usdKztRate

		setCalculation({
			koreaContainerKZT,
			koreaTransferKZT,
			koreaDocumentationKZT,
			priceKZT,
			customs,
			vat,
			excise,
			utilFee,
			regFee,
			totalCustoms,
			totalExpenses,
			finalCostKZT,
			finalCostUSD,
			carPriceKRW,
			carPriceUSD,
		})
	}

	if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>

	return (
		<div className='bg-white shadow-md rounded-lg p-6 mt-6'>
			<h2 className='text-xl font-semibold mb-4 text-center'>
				–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ üá∞üáø
			</h2>

			{/* –í—ã–±–æ—Ä –º–∞—Ä–∫–∏ */}
			<div className='mb-4'>
				<label
					htmlFor='brandSelect'
					className='block text-gray-700 font-semibold mb-2'
				>
					–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
				</label>
				<select
					id='brandSelect'
					value={selectedBrand}
					onChange={(e) => setSelectedBrand(e.target.value)}
					className='w-full border p-3 rounded-lg shadow-sm text-gray-800'
				>
					<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É</option>
					{brands.map((brand, index) => (
						<option key={index} value={brand}>
							{brand}
						</option>
					))}
				</select>
			</div>

			{/* –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ */}
			{selectedBrand && (
				<div className='mb-4'>
					<label
						htmlFor='modelSelect'
						className='block text-gray-700 font-semibold mb-2'
					>
						–ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è
					</label>
					<select
						id='modelSelect'
						value={selectedModel}
						onChange={(e) => setSelectedModel(e.target.value)}
						className='w-full border p-3 rounded-lg shadow-sm text-gray-800'
					>
						<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å</option>
						{models
							.sort((a, b) => (a > b ? 1 : -1))
							.map((model, index) => (
								<option key={index} value={model}>
									{model}
								</option>
							))}
					</select>
				</div>
			)}

			{/* –í—ã–±–æ—Ä –≥–æ–¥–∞ */}
			{selectedModel && (
				<div className='mb-4'>
					<label
						htmlFor='yearSelect'
						className='block text-gray-700 font-semibold mb-2'
					>
						–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞
					</label>
					<select
						id='yearSelect'
						value={selectedYear}
						onChange={(e) => setSelectedYear(e.target.value)}
						className='w-full border p-3 rounded-lg shadow-sm text-gray-800'
					>
						<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥</option>
						{years.map((year, index) => (
							<option key={index} value={year}>
								{year}
							</option>
						))}
					</select>
				</div>
			)}

			{/* –í—ã–±–æ—Ä –æ–±—ä—ë–º–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è */}
			{selectedYear && (
				<div className='mb-4'>
					<label
						htmlFor='volumeSelect'
						className='block text-gray-700 font-semibold mb-2'
					>
						–û–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è (—Å–º¬≥)
					</label>
					<select
						id='volumeSelect'
						value={selectedVolume}
						onChange={(e) => setSelectedVolume(e.target.value)}
						className='w-full border p-3 rounded-lg shadow-sm text-gray-800'
					>
						<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä—ë–º</option>
						{volumes.map((volume, index) => (
							<option key={index} value={volume}>
								{volume} —Å–º¬≥
							</option>
						))}
					</select>
				</div>
			)}

			{/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã */}
			{selectedVolume && price && (
				<div className='mt-6 p-5 bg-gray-50 shadow-md rounded-lg text-center'>
					<h3 className='text-lg font-semibold text-gray-800'>
						–°—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ –∏–Ω–≤–æ–π—Å–∞ ($)
					</h3>
					<p className='text-2xl font-bold text-blue-600'>
						{formatNumber(price * usdKztRate)} ‚Ç∏ / ${formatNumber(price)}
					</p>
				</div>
			)}

			{selectedVolume && (
				<div className='mt-6 text-center'>
					<button
						onClick={calculateCosts}
						className='bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg shadow-lg transition-all cursor-pointer'
					>
						üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
					</button>
				</div>
			)}

			{/* –ë–ª–æ–∫ —Ä–∞—Å—á—ë—Ç–æ–≤ */}
			{calculation && (
				<div className='mt-6 bg-blue-900 text-white p-6 rounded-lg shadow-lg'>
					<h3 className='text-2xl font-bold mb-4 text-center'>
						üìä –ö–∞–ª—å–∫—É–ª—è—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
					</h3>

					<div className='flex flex-col gap-3'>
						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä (–ö–æ—Ä–µ—è)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation?.koreaContainerKZT)} ‚Ç∏ /{' '}
								{formatNumber(calculation.koreaContainerKZT / usdKztRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–ê–≤—Ç–æ–≤–æ–∑ (–ö–æ—Ä–µ—è)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation?.koreaTransferKZT)} ‚Ç∏ /{' '}
								{formatNumber(calculation.koreaTransferKZT / usdKztRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (–ö–æ—Ä–µ—è)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation?.koreaDocumentationKZT)} ‚Ç∏ /{' '}
								{formatNumber(calculation.koreaDocumentationKZT / usdKztRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞ (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation.customs)} ‚Ç∏ /{' '}
								{formatNumber(calculation.customs / exchangeRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–ù–î–° (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation.vat)} ‚Ç∏ /{' '}
								{formatNumber(calculation.vat / exchangeRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–ê–∫—Ü–∏–∑ (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation.excise)} ‚Ç∏ /{' '}
								{formatNumber(calculation.excise / exchangeRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–£—Ç–∏–ª—å—Å–±–æ—Ä (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation.utilFee)} ‚Ç∏ /{' '}
								{formatNumber(calculation.utilFee / exchangeRate)} $
							</span>
						</div>

						<div className='flex justify-between text-base sm:text-lg border-b border-white border-opacity-30 pb-2'>
							<span>–ü–µ—Ä–≤–∏—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)</span>
							<span className='font-semibold text-right'>
								{formatNumber(calculation.regFee)} ‚Ç∏ /{' '}
								{formatNumber(calculation.regFee / exchangeRate)} $
							</span>
						</div>

						{/* –ò—Ç–æ–≥–æ–≤—ã–π –±–ª–æ–∫ —Å —Ñ–æ–Ω–æ–º –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–∞ */}
						<div className='bg-white text-black bg-opacity-20 rounded-lg p-4 mt-4'>
							<div className='flex justify-between text-lg font-semibold'>
								<span>üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ç–∞–º–æ–∂–∫–∏</span>
								<span className='text-right'>
									{formatNumber(calculation.totalExpenses)} ‚Ç∏ /{' '}
									{formatNumber(calculation.totalExpenses / exchangeRate)} $
								</span>
							</div>
							<div className='flex justify-between text-lg font-semibold'>
								<span>üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–¥ –∫–ª—é—á –¥–æ –ê–ª–º–∞—Ç—ã</span>
								<span className='text-right'>
									{formatNumber(calculation.finalCostKZT)} ‚Ç∏ /{' '}
									{formatNumber(calculation.finalCostKZT / usdKztRate)} $
								</span>
							</div>
						</div>
					</div>
				</div>
			)}
		</div>
	)
}

export default KazakhstanCalculator
